services:
  auth_db:
    container_name: auth_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # volumes:
    #   - pgdata:/var/lib/postgresql/data
  auth_db_api:
    container_name: auth_db_api
    build:
      context: ./auth_db_api
    depends_on: 
      auth_db:
        condition: service_healthy
    environment:
      DB_NAME: ${AUTH_DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: auth_db
      DB_PORT: 5432
    ports:
      - 8001:8000

  posts_db:
    container_name: posts_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTS_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # volumes:
    #   - pgdata:/var/lib/postgresql/data
  posts_db_api:
    container_name: posts_db_api
    build:
      context: ./posts_db_api
    depends_on: 
      posts_db:
        condition: service_healthy
    environment:
      DB_NAME: ${POSTS_DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: posts_db
      DB_PORT: 5432
    ports:
      - 8002:8000
  
  
# volumes:
#   pgdata:
