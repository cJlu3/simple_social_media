services:
  posts_db:
    container_name: posts_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTS_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
  posts_service:
    container_name: posts_service
    build:
      context: ./post_service
    depends_on:
      posts_db:
        condition: service_healthy
    environment:
      DB_NAME: ${POSTS_DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

  comments_db:
    container_name: comments_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${COMMENTS_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
  comments_service:
    container_name: comments_service
    build:
      context: ./comment_service
    depends_on:
      posts_db:
        condition: service_healthy
    environment:
      DB_NAME: ${COMMENTS_DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

  users_db:
    container_name: users_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${USERS_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
  users_service:
    container_name: users_service
    build:
      context: ./user_service
    depends_on:
      posts_db:
        condition: service_healthy
    environment:
      DB_NAME: ${USERS_DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

volumes:
  pgdata:
